<?php

namespace App\Services\LogServices;

// use App\Log;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class MainLogActivitiesServices
{
   public $logdepedencies;
   
   public function __construct()
   {
      $this->logdepedencies;
   }

   public function activitylog(bool $success, string $msglogs, bool $flush = true):void
   {
      try {
         //code...
         if (app()->version() > 8) {
            # code...
            // for laravel 8x+
            $this->logdepedencies = new \App\Models\LogActivity;
         } else {
            # code...
            // for laravel 7x+ or -
            $this->logdepedencies = new \App\LogActivity;
         }
         $model = $this->logdepedencies;
         $request = request();
         // $total = $this->logdepedencies->all();
         $total = $model->all();
         if (count($total) > 10000 && $flush == true) {
            # code...
            // Log::truncate();
            $model->truncate();
         }

         $log = $this->logdepedencies;
         $log->msglogs = strtolower($msglogs);
         $log->action = $request->getPathInfo();
         // $log->user_id = Auth::user()->id;
         if (Auth::check()) {
            # code...
            $log->user_id = Auth::user()->id;
         }
         // $log
         $log->currurl = url()->current();
         $log->useragent = $request->header('User-Agent');
         $log->connection = $request->header('connection');
         $log->method = $request->method();
         $log->date = date('d-F-Y H:i:s');
         if ($success) {
            # code...
            $log->status = 'success';
         } else {
            # code...
            $log->status = 'error';
         }
         $log->save();
      } catch (\Exception $th) {
         //throw $th;
         // Debug error
         dd($th);
      }
   }
}
